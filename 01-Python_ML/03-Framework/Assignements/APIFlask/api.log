2022-01-21 12:32:48,263  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:33:16,843  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:33:33,112 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 27, in mysqltable
    cursor.execute(query)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\cursor.py", line 569, in execute
    self._handle_result(self._connection.cmd_query(stmt))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 590, in cmd_query
    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 478, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1050 (42S01): Table 'api' already exists

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 30, in mysqltable
    return jsonify(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-21 12:33:33,187 127.0.0.1 - - [21/Jan/2022 12:33:33] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 12:33:45,712  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:34:14,286  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:34:52,758 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 27, in mysqltable
    cursor.execute(query)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\cursor.py", line 569, in execute
    self._handle_result(self._connection.cmd_query(stmt))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 590, in cmd_query
    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 478, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1050 (42S01): Table 'api' already exists

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 30, in mysqltable
    return jsonify(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-21 12:34:52,771 127.0.0.1 - - [21/Jan/2022 12:34:52] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 12:37:18,429  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:38:02,118 Table created successfully
2022-01-21 12:38:02,292 127.0.0.1 - - [21/Jan/2022 12:38:02] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 12:38:51,230 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 22, in mysqltable
    con = mydb.connect(host="localhost", user='root', passwd='Docker@123', database=DATABASE, use_pure=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\__init__.py", line 177, in connect
    return MySQLConnection(*args, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 104, in __init__
    self.connect(**kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\abstracts.py", line 781, in connect
    self._open_connection()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 288, in _open_connection
    self._ssl, self._conn_attrs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 208, in _do_auth
    self._auth_switch_request(username, password)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 252, in _auth_switch_request
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1049 (42000): Unknown database 'sachinabcd'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 29, in mysqltable
    return jsonify(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 35, in mysqltable
    con.close()
UnboundLocalError: local variable 'con' referenced before assignment
2022-01-21 12:38:51,255 127.0.0.1 - - [21/Jan/2022 12:38:51] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 12:39:30,935 Table created successfully
2022-01-21 12:39:30,949 127.0.0.1 - - [21/Jan/2022 12:39:30] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 12:40:30,764 Table created successfully
2022-01-21 12:40:30,824 127.0.0.1 - - [21/Jan/2022 12:40:30] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 12:40:54,312  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:41:07,130 flask Table created successfully
2022-01-21 12:41:07,196 127.0.0.1 - - [21/Jan/2022 12:41:07] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 12:53:48,873  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:54:09,752 flask Table created successfully
2022-01-21 12:54:09,800 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 51, in mysqltable
    mtable = mysqltablecreation(DATABASE,TABLENAME,COL1,CLOL1D,COL2,CLO21D,COL3,CLOL3D,COL4,CLOL4D)
TypeError: __init__() should return None, not 'Response'
2022-01-21 12:54:09,803 127.0.0.1 - - [21/Jan/2022 12:54:09] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 12:57:48,777  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:57:53,445 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 28, in __init__
    cursor.execute(query)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\cursor.py", line 569, in execute
    self._handle_result(self._connection.cmd_query(stmt))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 590, in cmd_query
    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 478, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1050 (42S01): Table 'flask' already exists

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 51, in mysqltable
    mtable = mysqltablecreation(DATABASE,TABLENAME,COL1,CLOL1D,COL2,CLO21D,COL3,CLOL3D,COL4,CLOL4D)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 30, in __init__
    return jsonify(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-21 12:57:53,452 127.0.0.1 - - [21/Jan/2022 12:57:53] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 12:59:05,730  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 12:59:07,969 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 28, in __init__
    cursor.execute(query)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\cursor.py", line 569, in execute
    self._handle_result(self._connection.cmd_query(stmt))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 590, in cmd_query
    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\connection.py", line 478, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1050 (42S01): Table 'flask' already exists

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 51, in mysqltable
    mtable = mysqltablecreation(DATABASE,TABLENAME,COL1,CLOL1D,COL2,CLO21D,COL3,CLOL3D,COL4,CLOL4D)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 30, in __init__
    jsonify(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-21 12:59:07,983 127.0.0.1 - - [21/Jan/2022 12:59:07] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:00:33,069  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:00:38,465 1050 (42S01): Table 'flask' already exists
2022-01-21 13:00:38,466 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    return self.finalize_request(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1538, in finalize_request
    response = self.make_response(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1731, in make_response
    "The view function did not return a valid"
TypeError: The view function did not return a valid response. The return type must be a string, dict, tuple, Response instance, or WSGI callable, but it was a mysqltablecreation.
2022-01-21 13:00:38,469 127.0.0.1 - - [21/Jan/2022 13:00:38] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:01:37,793  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:01:42,581 flask Table created successfully
2022-01-21 13:01:42,618 [('carbon',), ('customer',), ('flask',), ('glass5',), ('persons',), ('studentdetails',)]
2022-01-21 13:01:42,621 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 52, in mysqltable
    return jsonify(mtable)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type mysqltablecreation is not JSON serializable
2022-01-21 13:01:42,639 127.0.0.1 - - [21/Jan/2022 13:01:42] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:05:02,102  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:05:09,996 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 52, in mysqltable
    return jsonify(mtable.mysqltablecreate())
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 32, in mysqltablecreate
    logger.info(f"{TABLENAME} Table created successfully")
NameError: name 'TABLENAME' is not defined
2022-01-21 13:05:10,007 127.0.0.1 - - [21/Jan/2022 13:05:10] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:06:42,543  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:06:53,755 flask Table created successfully
2022-01-21 13:06:53,845 [('carbon',), ('customer',), ('flask',), ('glass5',), ('persons',), ('studentdetails',)]
2022-01-21 13:06:53,849 127.0.0.1 - - [21/Jan/2022 13:06:53] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:08:01,251  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:08:11,453 flask Table created successfully
2022-01-21 13:08:11,464 [('carbon',), ('customer',), ('flask',), ('glass5',), ('persons',), ('studentdetails',)]
2022-01-21 13:08:11,467 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 53, in mysqltable
    return jsonify(mtable.mysqltablecreate())
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 35, in mysqltablecreate
    return (cursor.fetchall())
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\mysql\connector\cursor.py", line 895, in fetchall
    raise errors.InterfaceError("No result set to fetch from.")
mysql.connector.errors.InterfaceError: No result set to fetch from.
2022-01-21 13:08:11,478 127.0.0.1 - - [21/Jan/2022 13:08:11] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:08:51,795  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:09:04,015 flask Table created successfully
2022-01-21 13:09:04,060 127.0.0.1 - - [21/Jan/2022 13:09:04] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:12:33,796  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:12:37,822 'mysql' object has no attribute 'DATABASE'
2022-01-21 13:12:37,822 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 53, in mysqltable
    return jsonify(mtable.mysqltablecreate(DATABASE,TABLENAME,COL1,CLOL1D,COL2,CLO21D,COL3,CLOL3D,COL4,CLOL4D))
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 37, in mysqltablecreate
    con.close()
UnboundLocalError: local variable 'con' referenced before assignment
2022-01-21 13:12:37,825 127.0.0.1 - - [21/Jan/2022 13:12:37] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:13:36,743  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:13:44,535 flask Table created successfully
2022-01-21 13:13:44,567 127.0.0.1 - - [21/Jan/2022 13:13:44] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:14:50,891 1050 (42S01): Table 'flask' already exists
2022-01-21 13:14:50,892 127.0.0.1 - - [21/Jan/2022 13:14:50] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:15:35,138  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:15:37,745 1050 (42S01): Table 'flask' already exists
2022-01-21 13:15:37,746 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 55, in mysqltable
    return jsonify(mtable.mysqltablecreate(DATABASE,TABLENAME,COL1,CLOL1D,COL2,CLO21D,COL3,CLOL3D,COL4,CLOL4D))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-21 13:15:37,750 127.0.0.1 - - [21/Jan/2022 13:15:37] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:16:51,008  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:16:53,514 Exception on /mysql/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 56, in mysqltable
    return jsonify(mtable.mysqltablecreate(DATABASE,TABLENAME,COL1,CLOL1D,COL2,CLO21D,COL3,CLOL3D,COL4,CLOL4D))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-21 13:16:53,520 127.0.0.1 - - [21/Jan/2022 13:16:53] "POST /mysql/tablecreate HTTP/1.1" 500 -
2022-01-21 13:17:28,124  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:17:30,373 1050 (42S01): Table 'flask' already exists
2022-01-21 13:17:30,375 127.0.0.1 - - [21/Jan/2022 13:17:30] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:18:17,090  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:18:28,128 flask Table created successfully
2022-01-21 13:18:28,144 127.0.0.1 - - [21/Jan/2022 13:18:28] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:19:34,345  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:19:39,080 flask Table created successfully
2022-01-21 13:19:39,096 127.0.0.1 - - [21/Jan/2022 13:19:39] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:21:14,409  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:21:40,215 api Table created successfully
2022-01-21 13:21:40,231 127.0.0.1 - - [21/Jan/2022 13:21:40] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-21 13:35:31,397  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:37:40,980 127.0.0.1 - - [21/Jan/2022 13:37:40] "GET /mysql/singleinsert HTTP/1.1" 405 -
2022-01-21 13:38:00,034 1054 (42S22): Unknown column 'sachin' in 'field list'
2022-01-21 13:38:00,035 127.0.0.1 - - [21/Jan/2022 13:38:00] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-21 13:44:02,777  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:44:08,500 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s  VALUES(1)' at line 1
2022-01-21 13:44:08,501 127.0.0.1 - - [21/Jan/2022 13:44:08] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-21 13:45:44,406  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:45:47,274 1136 (21S01): Column count doesn't match value count at row 1
2022-01-21 13:45:47,275 127.0.0.1 - - [21/Jan/2022 13:45:47] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-21 13:46:53,222  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:46:56,196 ['1', 'sachin', 'pitale', 'B ']
2022-01-21 13:46:56,200 1136 (21S01): Column count doesn't match value count at row 1
2022-01-21 13:46:56,202 127.0.0.1 - - [21/Jan/2022 13:46:56] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-21 13:48:57,508  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-21 13:48:59,565 1
2022-01-21 13:48:59,568 1136 (21S01): Column count doesn't match value count at row 1
2022-01-21 13:48:59,569 127.0.0.1 - - [21/Jan/2022 13:48:59] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:42:45,043  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:42:48,764 1
2022-01-22 10:42:48,892 1054 (42S22): Unknown column 'sachin' in 'field list'
2022-01-22 10:42:48,897 127.0.0.1 - - [22/Jan/2022 10:42:48] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:43:43,628  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:43:46,729 1
2022-01-22 10:43:46,805 Data inserted successfully
2022-01-22 10:43:46,865 [(1, 'sachin', 'pitale', 'B ')]
2022-01-22 10:43:46,867 127.0.0.1 - - [22/Jan/2022 10:43:46] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:45:37,389 1
2022-01-22 10:45:37,414 Data inserted successfully
2022-01-22 10:45:37,416 [(1, 'sachin', 'pitale', 'B ')]
2022-01-22 10:45:37,421 127.0.0.1 - - [22/Jan/2022 10:45:37] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:47:44,500  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:47:47,285 1
2022-01-22 10:47:47,303 Data inserted successfully
2022-01-22 10:47:47,305 [(1, 'sachin', 'pitale', 'B ')]
2022-01-22 10:47:47,307 127.0.0.1 - - [22/Jan/2022 10:47:47] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:48:31,188 1050 (42S01): Table 'api' already exists
2022-01-22 10:48:31,189 127.0.0.1 - - [22/Jan/2022 10:48:31] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-22 10:49:16,345  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:49:20,747 1
2022-01-22 10:49:20,793 Data inserted successfully
2022-01-22 10:49:20,794 [(1, 'sachin', 'pitale', 'B ')]
2022-01-22 10:49:20,797 127.0.0.1 - - [22/Jan/2022 10:49:20] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:50:42,132 2
2022-01-22 10:50:42,142 Data inserted successfully
2022-01-22 10:50:42,144 [(2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 10:50:42,146 127.0.0.1 - - [22/Jan/2022 10:50:42] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:53:00,807  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:53:03,313 2
2022-01-22 10:53:03,315 execute() missing 1 required positional argument: 'operation'
2022-01-22 10:53:03,317 127.0.0.1 - - [22/Jan/2022 10:53:03] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:53:50,215  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:53:53,042 2
2022-01-22 10:53:53,060 Data inserted successfully
2022-01-22 10:53:53,061 [(2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 10:53:53,063 127.0.0.1 - - [22/Jan/2022 10:53:53] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:55:35,209  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:55:37,855 2
2022-01-22 10:55:37,870 Data inserted successfully
2022-01-22 10:55:37,871 [(2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 10:55:37,874 127.0.0.1 - - [22/Jan/2022 10:55:37] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 10:56:26,105 1050 (42S01): Table 'api' already exists
2022-01-22 10:56:26,106 127.0.0.1 - - [22/Jan/2022 10:56:26] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-22 10:58:38,565  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 10:58:44,463 1050 (42S01): Table 'api' already exists
2022-01-22 10:58:44,465 127.0.0.1 - - [22/Jan/2022 10:58:44] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-22 10:59:38,215 flask Table created successfully
2022-01-22 10:59:38,230 127.0.0.1 - - [22/Jan/2022 10:59:38] "POST /mysql/tablecreate HTTP/1.1" 200 -
2022-01-22 10:59:52,788 2
2022-01-22 10:59:52,835 Data inserted successfully
2022-01-22 10:59:52,837 [(2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 10:59:52,843 127.0.0.1 - - [22/Jan/2022 10:59:52] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:01:26,004 1
2022-01-22 11:01:26,007 1062 (23000): Duplicate entry '2' for key 'flask.PRIMARY'
2022-01-22 11:01:26,008 127.0.0.1 - - [22/Jan/2022 11:01:26] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:01:32,532 1
2022-01-22 11:01:32,535 1062 (23000): Duplicate entry '2' for key 'flask.PRIMARY'
2022-01-22 11:01:32,536 127.0.0.1 - - [22/Jan/2022 11:01:32] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:02:12,122 1
2022-01-22 11:02:12,126 1062 (23000): Duplicate entry '2' for key 'flask.PRIMARY'
2022-01-22 11:02:12,127 127.0.0.1 - - [22/Jan/2022 11:02:12] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:02:48,346  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:02:50,422 1
2022-01-22 11:02:50,433 Data inserted successfully
2022-01-22 11:02:50,435 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 11:02:50,438 127.0.0.1 - - [22/Jan/2022 11:02:50] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:04:37,485  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:04:55,053 1
2022-01-22 11:04:55,078 Data inserted successfully
2022-01-22 11:04:55,080 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 11:04:55,082 127.0.0.1 - - [22/Jan/2022 11:04:55] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:05:42,724  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:05:45,645 1
2022-01-22 11:05:45,660 Data inserted successfully
2022-01-22 11:05:45,662 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 11:05:45,665 127.0.0.1 - - [22/Jan/2022 11:05:45] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:06:44,319  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:06:47,265 1
2022-01-22 11:06:47,283 Data inserted successfully
2022-01-22 11:06:47,285 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 11:06:47,288 127.0.0.1 - - [22/Jan/2022 11:06:47] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:07:39,257  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:07:40,306 1
2022-01-22 11:07:40,425 Data inserted successfully
2022-01-22 11:07:40,428 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B ')]
2022-01-22 11:07:40,431 127.0.0.1 - - [22/Jan/2022 11:07:40] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:08:05,686 3
2022-01-22 11:08:06,120 Data inserted successfully
2022-01-22 11:08:06,126 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B '), (3, 'Kunal', 'Singh', 'B ')]
2022-01-22 11:08:06,134 127.0.0.1 - - [22/Jan/2022 11:08:06] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:08:13,159 3
2022-01-22 11:08:13,161 1062 (23000): Duplicate entry '3' for key 'flask.PRIMARY'
2022-01-22 11:08:13,161 127.0.0.1 - - [22/Jan/2022 11:08:13] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:08:40,532 3
2022-01-22 11:08:40,535 1062 (23000): Duplicate entry '3' for key 'flask.PRIMARY'
2022-01-22 11:08:40,536 127.0.0.1 - - [22/Jan/2022 11:08:40] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:08:45,959 4
2022-01-22 11:08:46,213 Data inserted successfully
2022-01-22 11:08:46,220 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B ')]
2022-01-22 11:08:46,230 127.0.0.1 - - [22/Jan/2022 11:08:46] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:09:13,103 5
2022-01-22 11:09:13,233 Data inserted successfully
2022-01-22 11:09:13,237 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B ')]
2022-01-22 11:09:13,243 127.0.0.1 - - [22/Jan/2022 11:09:13] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:10:02,137 5
2022-01-22 11:10:02,142 1146 (42S02): Table 'sachin.flask1' doesn't exist
2022-01-22 11:10:02,143 127.0.0.1 - - [22/Jan/2022 11:10:02] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:10:58,482  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:11:02,491 1146 (42S02): Table 'sachin.flask1' doesn't exist
2022-01-22 11:11:02,492 Exception on /mysql/singleinsert [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 97, in mysqlsingle
    return jsonify(msingle.singleinsert(DATABASE,TABLENAME,COL1,COL2,COL3,COL4))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 11:11:02,555 127.0.0.1 - - [22/Jan/2022 11:11:02] "POST /mysql/singleinsert HTTP/1.1" 500 -
2022-01-22 11:11:26,982 Data inserted successfully
2022-01-22 11:11:26,989 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'B ')]
2022-01-22 11:11:26,998 127.0.0.1 - - [22/Jan/2022 11:11:26] "POST /mysql/singleinsert HTTP/1.1" 200 -
2022-01-22 11:26:43,010  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:26:49,353 Data updated successfully
2022-01-22 11:26:49,357 [(1, 'sachin', 'pitale', 'B '), (2, 'yogesh', 'shinkar', 'B '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:26:49,363 127.0.0.1 - - [22/Jan/2022 11:26:49] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:27:09,091 Data updated successfully
2022-01-22 11:27:09,096 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'B '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:27:09,103 127.0.0.1 - - [22/Jan/2022 11:27:09] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:27:15,761 Data updated successfully
2022-01-22 11:27:15,767 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:27:15,774 127.0.0.1 - - [22/Jan/2022 11:27:15] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:27:25,905 Data updated successfully
2022-01-22 11:27:25,907 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:27:25,911 127.0.0.1 - - [22/Jan/2022 11:27:25] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:27:53,414 Data updated successfully
2022-01-22 11:27:53,415 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:27:53,418 127.0.0.1 - - [22/Jan/2022 11:27:53] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:28:10,085 Data updated successfully
2022-01-22 11:28:10,086 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:28:10,088 127.0.0.1 - - [22/Jan/2022 11:28:10] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:28:41,381 1054 (42S22): Unknown column 'FirstName1' in 'where clause'
2022-01-22 11:28:41,382 Exception on /mysql/update [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 138, in mysqlupdate
    return  jsonify(update.mysqlupdatefun(DATABASE,TABLENAME,COL1,COL1VALUE,UPDATECOL,UPDATEVALUE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 11:28:41,392 127.0.0.1 - - [22/Jan/2022 11:28:41] "POST /mysql/update HTTP/1.1" 500 -
2022-01-22 11:28:55,864 Data updated successfully
2022-01-22 11:28:55,867 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:28:55,870 127.0.0.1 - - [22/Jan/2022 11:28:55] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:29:34,674 Data updated successfully
2022-01-22 11:29:34,679 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 11:29:34,685 127.0.0.1 - - [22/Jan/2022 11:29:34] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 11:29:56,229 1054 (42S22): Unknown column 'FirstName1' in 'where clause'
2022-01-22 11:29:56,230 Exception on /mysql/update [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 138, in mysqlupdate
    return  jsonify(update.mysqlupdatefun(DATABASE,TABLENAME,COL1,COL1VALUE,UPDATECOL,UPDATEVALUE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 11:29:56,232 127.0.0.1 - - [22/Jan/2022 11:29:56] "POST /mysql/update HTTP/1.1" 500 -
2022-01-22 11:49:05,190  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:53:54,635 127.0.0.1 - - [22/Jan/2022 11:53:54] "GET /mysql/update HTTP/1.1" 405 -
2022-01-22 11:54:12,501  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:54:15,163 127.0.0.1 - - [22/Jan/2022 11:54:15] "GET /mysql/update HTTP/1.1" 405 -
2022-01-22 11:55:53,754 127.0.0.1 - - [22/Jan/2022 11:55:53] "GET /mysql/update HTTP/1.1" 405 -
2022-01-22 11:56:08,533 127.0.0.1 - - [22/Jan/2022 11:56:08] "GET /mysql/bulkdataupload HTTP/1.1" 405 -
2022-01-22 11:56:15,186 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 11:56:15,190 127.0.0.1 - - [22/Jan/2022 11:56:15] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 11:58:57,021  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 11:59:03,478 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 11:59:03,482 127.0.0.1 - - [22/Jan/2022 11:59:03] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 11:59:08,268 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 11:59:08,269 127.0.0.1 - - [22/Jan/2022 11:59:08] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 12:00:02,601  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:00:21,452 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:00:21,456 127.0.0.1 - - [22/Jan/2022 12:00:21] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 12:02:42,069  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:03:28,294 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:03:28,298 127.0.0.1 - - [22/Jan/2022 12:03:28] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 12:03:58,912  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:04:02,107 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:04:02,111 127.0.0.1 - - [22/Jan/2022 12:04:02] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 12:04:53,314  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:04:58,201 Exception on /mysql/bulkdataupload [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:04:58,205 127.0.0.1 - - [22/Jan/2022 12:04:58] "POST /mysql/bulkdataupload HTTP/1.1" 500 -
2022-01-22 12:07:13,923  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:07:23,868 127.0.0.1 - - [22/Jan/2022 12:07:23] "POST /mysql/bulkdataupload HTTP/1.1" 404 -
2022-01-22 12:07:32,357 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulkupdate
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:07:32,359 127.0.0.1 - - [22/Jan/2022 12:07:32] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:08:09,333 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulkupdate
    DATABASE = request.json['DATABASE']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:08:09,334 127.0.0.1 - - [22/Jan/2022 12:08:09] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:08:14,695  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:08:32,749 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulkupdate
    DATABASE = request.json['DATABASE']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:08:32,752 127.0.0.1 - - [22/Jan/2022 12:08:32] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:10:48,204  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:10:52,653 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulk
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:10:52,656 127.0.0.1 - - [22/Jan/2022 12:10:52] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:12:03,160 Data updated successfully
2022-01-22 12:12:03,165 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'C ')]
2022-01-22 12:12:03,172 127.0.0.1 - - [22/Jan/2022 12:12:03] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 12:12:14,642 Data updated successfully
2022-01-22 12:12:14,646 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 12:12:14,652 127.0.0.1 - - [22/Jan/2022 12:12:14] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 12:12:37,580 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulk
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:12:37,582 127.0.0.1 - - [22/Jan/2022 12:12:37] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:12:47,062 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulk
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:12:47,063 127.0.0.1 - - [22/Jan/2022 12:12:47] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:13:18,115  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:13:21,602 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 178, in mysqlbulk
    DATABASE = str(request.json['DATABASENAME'])
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:13:21,604 127.0.0.1 - - [22/Jan/2022 12:13:21] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:17:29,368  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:19:07,969 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulk
    DATABASE = str(request.json['DATABASENAME'])
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:19:07,972 127.0.0.1 - - [22/Jan/2022 12:19:07] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:19:47,443  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:19:50,676 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulk
    DATABASE1 = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:19:50,678 127.0.0.1 - - [22/Jan/2022 12:19:50] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:20:08,855 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 177, in mysqlbulk
    DATABASE1 = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 12:20:08,856 127.0.0.1 - - [22/Jan/2022 12:20:08] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:20:12,540 Data updated successfully
2022-01-22 12:20:12,543 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'A ')]
2022-01-22 12:20:12,546 127.0.0.1 - - [22/Jan/2022 12:20:12] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 12:20:19,249 Data updated successfully
2022-01-22 12:20:19,252 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B '), (6, 'Tejas', 'chawan', 'C')]
2022-01-22 12:20:19,256 127.0.0.1 - - [22/Jan/2022 12:20:19] "POST /mysql/update HTTP/1.1" 200 -
2022-01-22 12:23:19,406  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:23:32,246 [Errno 2] No such file or directory: 'self.FILENAME'
2022-01-22 12:23:32,246 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 182, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type FileNotFoundError is not JSON serializable
2022-01-22 12:23:32,251 127.0.0.1 - - [22/Jan/2022 12:23:32] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:25:16,595 [Errno 2] No such file or directory: 'self.FILENAME'
2022-01-22 12:25:16,596 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 182, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type FileNotFoundError is not JSON serializable
2022-01-22 12:25:16,598 127.0.0.1 - - [22/Jan/2022 12:25:16] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:26:06,898  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:26:26,329 E:\mydata.csv
2022-01-22 12:26:26,329 [Errno 2] No such file or directory: 'self.FILENAME'
2022-01-22 12:26:26,330 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type FileNotFoundError is not JSON serializable
2022-01-22 12:26:26,334 127.0.0.1 - - [22/Jan/2022 12:26:26] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:28:28,982 mydata.csv
2022-01-22 12:28:28,982 [Errno 2] No such file or directory: 'self.FILENAME'
2022-01-22 12:28:28,982 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type FileNotFoundError is not JSON serializable
2022-01-22 12:28:28,984 127.0.0.1 - - [22/Jan/2022 12:28:28] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:29:38,105  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:29:42,882 mydata.csv
2022-01-22 12:29:42,883 1054 (42S22): Unknown column 'Mayur' in 'field list'
2022-01-22 12:29:42,884 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:29:42,888 127.0.0.1 - - [22/Jan/2022 12:29:42] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:32:31,190 mydata.csv
2022-01-22 12:32:31,193 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '',Jathale',B')' at line 1
2022-01-22 12:32:31,193 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:32:31,196 127.0.0.1 - - [22/Jan/2022 12:32:31] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:37:25,113 mydata.csv
2022-01-22 12:37:25,115 1054 (42S22): Unknown column 'Mayur' in 'field list'
2022-01-22 12:37:25,115 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:37:25,118 127.0.0.1 - - [22/Jan/2022 12:37:25] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:43:46,984 mydata.csv
2022-01-22 12:43:46,986 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '',Jathale',B)' at line 1
2022-01-22 12:43:46,987 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:43:46,990 127.0.0.1 - - [22/Jan/2022 12:43:46] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:45:28,244 mydata.csv
2022-01-22 12:45:28,245 1054 (42S22): Unknown column 'Mayur' in 'field list'
2022-01-22 12:45:28,246 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:45:28,249 127.0.0.1 - - [22/Jan/2022 12:45:28] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:46:13,081  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:46:15,407 mydata.csv
2022-01-22 12:46:15,409 1054 (42S22): Unknown column 'Mayur' in 'field list'
2022-01-22 12:46:15,410 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 182, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:46:15,415 127.0.0.1 - - [22/Jan/2022 12:46:15] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:46:50,442  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:46:53,752 mydata.csv
2022-01-22 12:46:53,752 ['7,Mayur,Jathale,B']
2022-01-22 12:46:53,754 1054 (42S22): Unknown column 'Mayur' in 'field list'
2022-01-22 12:46:53,754 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:46:53,768 127.0.0.1 - - [22/Jan/2022 12:46:53] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:48:20,605  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:48:23,856 mydata.csv
2022-01-22 12:48:23,856 ['7,Mayur,Jathale,B']
2022-01-22 12:48:23,857 1136 (21S01): Column count doesn't match value count at row 1
2022-01-22 12:48:23,858 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 184, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataError is not JSON serializable
2022-01-22 12:48:23,876 127.0.0.1 - - [22/Jan/2022 12:48:23] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:49:00,345  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:49:03,272 mydata.csv
2022-01-22 12:49:03,272 ['7,Mayur,Jathale,B']
2022-01-22 12:49:03,273 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[7, 'Mayur', 'Jathale', 'B'])' at line 1
2022-01-22 12:49:03,274 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 184, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 12:49:03,280 127.0.0.1 - - [22/Jan/2022 12:49:03] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:49:54,090  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 12:49:55,636 mydata.csv
2022-01-22 12:49:55,637 ['7,Mayur,Jathale,B']
2022-01-22 12:49:55,638 1136 (21S01): Column count doesn't match value count at row 1
2022-01-22 12:49:55,639 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 184, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataError is not JSON serializable
2022-01-22 12:49:55,645 127.0.0.1 - - [22/Jan/2022 12:49:55] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 12:50:38,185  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 13:24:50,305  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 13:24:53,137 mydata.csv
2022-01-22 13:24:53,137 ['7,mayur,Jathale,B']
2022-01-22 13:24:53,139 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ',,m,a)' at line 1
2022-01-22 13:24:53,139 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 13:24:53,144 127.0.0.1 - - [22/Jan/2022 13:24:53] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 13:27:46,893 mydata.csv
2022-01-22 13:27:46,893 ['7,mayur,Jathale,B']
2022-01-22 13:27:46,894 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ',,m,a)' at line 1
2022-01-22 13:27:46,895 Exception on /mysql/bulk [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 183, in mysqlbulk
    return  jsonify(bulk.mysqlbulkupdatefun(DATABASE,TABLENAME,FILENAME))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 13:27:46,897 127.0.0.1 - - [22/Jan/2022 13:27:46] "POST /mysql/bulk HTTP/1.1" 500 -
2022-01-22 13:44:02,145  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 13:44:58,840 1205 (HY000): Lock wait timeout exceeded; try restarting transaction
2022-01-22 13:44:58,841 Exception on /mysql/delete [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 218, in mysqldelete
    return  jsonify(delete.mysqldeleterecord(DATABASE,TABLENAME,COL1,COL1VALUE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DatabaseError is not JSON serializable
2022-01-22 13:44:58,848 127.0.0.1 - - [22/Jan/2022 13:44:58] "POST /mysql/delete HTTP/1.1" 500 -
2022-01-22 13:46:59,381  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 13:47:05,257 1054 (42S22): Unknown column 'tejas' in 'where clause'
2022-01-22 13:47:05,258 Exception on /mysql/delete [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 218, in mysqldelete
    return  jsonify(delete.mysqldeleterecord(DATABASE,TABLENAME,COL1,COL1VALUE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ProgrammingError is not JSON serializable
2022-01-22 13:47:05,265 127.0.0.1 - - [22/Jan/2022 13:47:05] "POST /mysql/delete HTTP/1.1" 500 -
2022-01-22 13:48:04,401 Data deleted successfully
2022-01-22 13:48:04,403 [(1, 'sachin', 'pitale', 'A '), (2, 'yogesh', 'shinkar', 'A '), (3, 'Kunal', 'Singh', 'B '), (4, 'prathmesh', 'pandit', 'B '), (5, 'Sonu', 'Raj', 'B ')]
2022-01-22 13:48:04,406 127.0.0.1 - - [22/Jan/2022 13:48:04] "POST /mysql/delete HTTP/1.1" 200 -
2022-01-22 13:54:32,415  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 13:55:06,919 127.0.0.1 - - [22/Jan/2022 13:55:06] "GET /mysql/view HTTP/1.1" 405 -
2022-01-22 13:55:18,411 127.0.0.1 - - [22/Jan/2022 13:55:18] "POST /mysql/view HTTP/1.1" 200 -
2022-01-22 13:55:39,733 127.0.0.1 - - [22/Jan/2022 13:55:39] "POST /mysql/view HTTP/1.1" 200 -
2022-01-22 13:55:49,087 127.0.0.1 - - [22/Jan/2022 13:55:49] "POST /mysql/view HTTP/1.1" 200 -
2022-01-22 13:56:07,810 127.0.0.1 - - [22/Jan/2022 13:56:07] "POST /mysql/view HTTP/1.1" 200 -
2022-01-22 16:50:25,997  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 16:50:32,592 127.0.0.1 - - [22/Jan/2022 16:50:32] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 16:55:55,713  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 16:55:58,380 string indices must be integers
2022-01-22 16:55:58,380 Exception on /mongo/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 198, in mongotable
    return jsonify(mongotb.mongotablecreate(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type TypeError is not JSON serializable
2022-01-22 16:55:58,385 127.0.0.1 - - [22/Jan/2022 16:55:58] "POST /mongo/tablecreate HTTP/1.1" 500 -
2022-01-22 16:57:04,226  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 16:57:06,940 127.0.0.1 - - [22/Jan/2022 16:57:06] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 16:58:09,522  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 16:58:11,954 Exception on /mongo/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 199, in mongotable
    return jsonify(mongotb.mongotablecreate(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Collection is not JSON serializable
2022-01-22 16:58:11,958 127.0.0.1 - - [22/Jan/2022 16:58:11] "POST /mongo/tablecreate HTTP/1.1" 500 -
2022-01-22 16:59:58,005  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:00:01,030 name 'dataBase' is not defined
2022-01-22 17:00:01,031 Exception on /mongo/tablecreate [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 198, in mongotable
    return jsonify(mongotb.mongotablecreate(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type NameError is not JSON serializable
2022-01-22 17:00:01,034 127.0.0.1 - - [22/Jan/2022 17:00:01] "POST /mongo/tablecreate HTTP/1.1" 500 -
2022-01-22 17:01:45,396  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:01:45,617 127.0.0.1 - - [22/Jan/2022 17:01:45] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:04:40,283  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:04:42,812 127.0.0.1 - - [22/Jan/2022 17:04:42] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:05:29,402  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:06:18,666  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:06:21,885 127.0.0.1 - - [22/Jan/2022 17:06:21] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:07:38,955  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:07:39,701 127.0.0.1 - - [22/Jan/2022 17:07:39] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:07:41,172 127.0.0.1 - - [22/Jan/2022 17:07:41] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:08:49,970  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:08:53,735 127.0.0.1 - - [22/Jan/2022 17:08:53] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:09:49,330  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:09:51,546 Collection(Database(MongoClient(host=['localhost:27017'], document_class=dict, tz_aware=False, connect=True), 'sachin'), 'testdb1')
2022-01-22 17:09:51,547 127.0.0.1 - - [22/Jan/2022 17:09:51] "POST /mongo/tablecreate HTTP/1.1" 200 -
2022-01-22 17:16:40,908  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:18:10,062 127.0.0.1 - - [22/Jan/2022 17:18:10] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:18:54,367  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:19:00,674 127.0.0.1 - - [22/Jan/2022 17:19:00] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:19:44,183 127.0.0.1 - - [22/Jan/2022 17:19:44] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:19:57,687 127.0.0.1 - - [22/Jan/2022 17:19:57] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:20:51,820 127.0.0.1 - - [22/Jan/2022 17:20:51] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:21:13,128 127.0.0.1 - - [22/Jan/2022 17:21:13] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:22:12,259  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:22:15,900 127.0.0.1 - - [22/Jan/2022 17:22:15] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:23:18,098 127.0.0.1 - - [22/Jan/2022 17:23:18] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:23:26,130 document must be an instance of dict, bson.son.SON, bson.raw_bson.RawBSONDocument, or a type that inherits from collections.MutableMapping
2022-01-22 17:23:26,130 Exception on /mango/record [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 225, in mongoadd
    return  jsonify(mongoadd.mongoaddrecord(DATABASE,TABLE,RECORD))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type TypeError is not JSON serializable
2022-01-22 17:23:26,136 127.0.0.1 - - [22/Jan/2022 17:23:26] "POST /mango/record HTTP/1.1" 500 -
2022-01-22 17:25:46,643  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:26:10,356 127.0.0.1 - - [22/Jan/2022 17:26:10] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:26:41,917 127.0.0.1 - - [22/Jan/2022 17:26:41] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:27:20,818 127.0.0.1 - - [22/Jan/2022 17:27:20] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:27:42,607 127.0.0.1 - - [22/Jan/2022 17:27:42] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:30:36,075  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:30:48,182 127.0.0.1 - - [22/Jan/2022 17:30:48] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:31:11,754 127.0.0.1 - - [22/Jan/2022 17:31:11] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:32:04,522 127.0.0.1 - - [22/Jan/2022 17:32:04] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:32:10,638  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:32:16,248 127.0.0.1 - - [22/Jan/2022 17:32:16] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:32:44,437  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:32:46,181 127.0.0.1 - - [22/Jan/2022 17:32:46] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:33:46,287 127.0.0.1 - - [22/Jan/2022 17:33:46] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:34:08,167 127.0.0.1 - - [22/Jan/2022 17:34:08] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:34:13,282 127.0.0.1 - - [22/Jan/2022 17:34:13] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:35:26,590  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:35:51,445  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:36:03,187 Exception on /mango/record [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 225, in mongoadd
    logger.info(RECORD)
NameError: name 'RECORD' is not defined
2022-01-22 17:36:03,190 127.0.0.1 - - [22/Jan/2022 17:36:03] "POST /mango/record HTTP/1.1" 500 -
2022-01-22 17:36:37,690 Exception on /mango/record [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 225, in mongoadd
    logger.info(RECORD)
NameError: name 'RECORD' is not defined
2022-01-22 17:36:37,692 127.0.0.1 - - [22/Jan/2022 17:36:37] "POST /mango/record HTTP/1.1" 500 -
2022-01-22 17:36:45,568  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:36:48,633 ABC
2022-01-22 17:36:48,641 ABC
2022-01-22 17:36:48,855 Exception on /mango/record [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 228, in mongoadd
    return  jsonify(mongoadd.mongoaddrecord(DATABASE,TABLE,RECORD))
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 208, in mongoaddrecord
    return (db1.find_one())
AttributeError: 'InsertOneResult' object has no attribute 'find_one'
2022-01-22 17:36:48,859 127.0.0.1 - - [22/Jan/2022 17:36:48] "POST /mango/record HTTP/1.1" 500 -
2022-01-22 17:38:06,390  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:38:07,125 {'name': 'Peter1', 'address': 'Lowstreet 271'}
2022-01-22 17:38:07,133 {'name': 'Peter1', 'address': 'Lowstreet 271'}
2022-01-22 17:38:07,144 Exception on /mango/record [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 228, in mongoadd
    return  jsonify(mongoadd.mongoaddrecord(DATABASE,TABLE,RECORD))
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 208, in mongoaddrecord
    return (db1.find_one())
AttributeError: 'InsertOneResult' object has no attribute 'find_one'
2022-01-22 17:38:07,146 127.0.0.1 - - [22/Jan/2022 17:38:07] "POST /mango/record HTTP/1.1" 500 -
2022-01-22 17:39:01,755  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:39:05,564 {'name': 'Peter1', 'address': 'Lowstreet 271'}
2022-01-22 17:39:05,571 {'name': 'Peter1', 'address': 'Lowstreet 271'}
2022-01-22 17:39:05,583 127.0.0.1 - - [22/Jan/2022 17:39:05] "POST /mango/record HTTP/1.1" 200 -
2022-01-22 17:40:02,903 {'name': 'sachin', 'address': 'vijay nagar 271'}
2022-01-22 17:40:02,909 {'name': 'sachin', 'address': 'vijay nagar 271'}
2022-01-22 17:40:02,925 127.0.0.1 - - [22/Jan/2022 17:40:02] "POST /mango/record HTTP/1.1" 200 -
2022-01-22 17:52:37,682  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 17:53:48,731 127.0.0.1 - - [22/Jan/2022 17:53:48] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:55:02,279 127.0.0.1 - - [22/Jan/2022 17:55:02] "POST /mango/record HTTP/1.1" 400 -
2022-01-22 17:55:12,294 Exception on /mango/record [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 240, in mongoadd
    RECORD = request.json['RECORD']
KeyError: 'RECORD'
2022-01-22 17:55:12,296 127.0.0.1 - - [22/Jan/2022 17:55:12] "POST /mango/record HTTP/1.1" 500 -
2022-01-22 17:55:43,573 127.0.0.1 - - [22/Jan/2022 17:55:43] "POST /mango/update HTTP/1.1" 404 -
2022-01-22 17:56:16,796 update only works with $ operators
2022-01-22 17:56:16,796 Exception on /mongo/update [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 254, in mongoupdate
    return jsonify(mongoup.mongoupdate(DATABASE,TABLE,OLDRECORD,NEWRECORD))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ValueError is not JSON serializable
2022-01-22 17:56:16,800 127.0.0.1 - - [22/Jan/2022 17:56:16] "POST /mongo/update HTTP/1.1" 500 -
2022-01-22 17:57:57,084 127.0.0.1 - - [22/Jan/2022 17:57:57] "POST /mongo/update HTTP/1.1" 200 -
2022-01-22 17:58:16,333 127.0.0.1 - - [22/Jan/2022 17:58:16] "POST /mongo/update HTTP/1.1" 200 -
2022-01-22 18:16:29,614  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:16:31,976 127.0.0.1 - - [22/Jan/2022 18:16:31] "POST /mongo/delete HTTP/1.1" 400 -
2022-01-22 18:16:39,793 127.0.0.1 - - [22/Jan/2022 18:16:39] "POST /mongo/delete HTTP/1.1" 200 -
2022-01-22 18:17:26,007 127.0.0.1 - - [22/Jan/2022 18:17:26] "POST /mongo/delete HTTP/1.1" 200 -
2022-01-22 18:20:48,350  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:21:10,685 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 298, in mongoview
    DATABASE = request.json['DATABASENAME']
TypeError: 'NoneType' object is not subscriptable
2022-01-22 18:21:10,687 127.0.0.1 - - [22/Jan/2022 18:21:10] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:21:29,720 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 302, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE, TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Cursor is not JSON serializable
2022-01-22 18:21:29,725 127.0.0.1 - - [22/Jan/2022 18:21:29] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:22:24,526  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:22:25,212 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 302, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Cursor is not JSON serializable
2022-01-22 18:22:25,222 127.0.0.1 - - [22/Jan/2022 18:22:25] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:23:15,258  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:23:16,544 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Cursor is not JSON serializable
2022-01-22 18:23:16,549 127.0.0.1 - - [22/Jan/2022 18:23:16] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:24:28,908  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:24:31,111 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Cursor is not JSON serializable
2022-01-22 18:24:31,115 127.0.0.1 - - [22/Jan/2022 18:24:31] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:25:38,682  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:25:47,272 <pymongo.cursor.Cursor object at 0x000002B6AB0FAE88>
2022-01-22 18:25:47,273 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Cursor is not JSON serializable
2022-01-22 18:25:47,279 127.0.0.1 - - [22/Jan/2022 18:25:47] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:29:19,616  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:29:45,483 {'_id': ObjectId('61ebf3589fae6763d6b8562d'), 'name': 'Peter', 'address': 'Lowstreet 27'}
2022-01-22 18:29:45,484 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:29:45,489 127.0.0.1 - - [22/Jan/2022 18:29:45] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:30:11,938 {'name': 'sachin', 'address': 'vijay nagar 271'}
2022-01-22 18:30:11,964 127.0.0.1 - - [22/Jan/2022 18:30:11] "POST /mango/record HTTP/1.1" 200 -
2022-01-22 18:30:19,165 {'_id': ObjectId('61ebf3589fae6763d6b8562d'), 'name': 'Peter', 'address': 'Lowstreet 27'}
2022-01-22 18:30:19,166 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:30:19,167 127.0.0.1 - - [22/Jan/2022 18:30:19] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:31:43,907 {'_id': ObjectId('61ebf3589fae6763d6b8562d'), 'name': 'Peter', 'address': 'Lowstreet 27'}
2022-01-22 18:31:43,908 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:31:43,911 127.0.0.1 - - [22/Jan/2022 18:31:43] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:31:50,081  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:31:52,118 {'_id': ObjectId('61ebf3589fae6763d6b8562d'), 'name': 'Peter', 'address': 'Lowstreet 27'}
2022-01-22 18:31:52,119 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:31:52,122 127.0.0.1 - - [22/Jan/2022 18:31:52] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:32:50,873  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:32:53,302 {'_id': ObjectId('61ebf3589fae6763d6b8562d'), 'name': 'Peter', 'address': 'Lowstreet 27'}
2022-01-22 18:32:53,303 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 302, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:32:53,308 127.0.0.1 - - [22/Jan/2022 18:32:53] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:32:54,553 {'_id': ObjectId('61ebf3589fae6763d6b8562d'), 'name': 'Peter', 'address': 'Lowstreet 27'}
2022-01-22 18:32:54,553 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 302, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:32:54,624 127.0.0.1 - - [22/Jan/2022 18:32:54] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:33:07,939 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:33:07,940 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 302, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:33:07,942 127.0.0.1 - - [22/Jan/2022 18:33:07] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:34:19,373  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:34:25,643 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:34:25,644 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 302, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:34:25,658 127.0.0.1 - - [22/Jan/2022 18:34:25] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:35:05,099  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:35:07,664 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:35:07,664 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:35:07,668 127.0.0.1 - - [22/Jan/2022 18:35:07] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:35:25,540 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:35:25,540 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:35:25,542 127.0.0.1 - - [22/Jan/2022 18:35:25] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:36:07,360 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:36:07,361 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:36:07,363 127.0.0.1 - - [22/Jan/2022 18:36:07] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:36:13,161 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:36:13,161 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:36:13,163 127.0.0.1 - - [22/Jan/2022 18:36:13] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:36:44,635 {'_id': ObjectId('61e11b0bb13fabac74f4a10a'), 'CompanyName': 'DS', 'Product': 'FSDS', 'Course': 'MLDL'}
2022-01-22 18:36:44,636 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 303, in mongoview
    return jsonify(mongoview.mongotableview(DATABASE,TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:36:44,638 127.0.0.1 - - [22/Jan/2022 18:36:44] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:38:00,587  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-22 18:38:03,313 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    return self.finalize_request(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1538, in finalize_request
    response = self.make_response(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1716, in make_response
    rv = jsonify(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:38:03,318 127.0.0.1 - - [22/Jan/2022 18:38:03] "POST /mongo/view HTTP/1.1" 500 -
2022-01-22 18:39:09,438 Exception on /mongo/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    return self.finalize_request(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1538, in finalize_request
    response = self.make_response(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1716, in make_response
    rv = jsonify(rv)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ObjectId is not JSON serializable
2022-01-22 18:39:09,440 127.0.0.1 - - [22/Jan/2022 18:39:09] "POST /mongo/view HTTP/1.1" 500 -
2022-01-23 18:08:33,761  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:22:57,532  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:30:42,325 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:30:43,627 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:30:45,132 Closing connection <AsyncoreConnection(2863169035720) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:30:45,133 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:30:47,821 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:30:51,495 127.0.0.1 - - [23/Jan/2022 18:30:51] "POST /cassendra/table HTTP/1.1" 200 -
2022-01-23 18:32:41,525  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:32:58,564 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:32:59,851 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:33:01,357 Closing connection <AsyncoreConnection(2488406327816) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:33:01,358 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:33:04,009 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:33:09,249 127.0.0.1 - - [23/Jan/2022 18:33:09] "POST /cassendra/table HTTP/1.1" 200 -
2022-01-23 18:42:41,415  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:42:45,268 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:42:46,574 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:42:48,082 Closing connection <AsyncoreConnection(2248979149384) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:42:48,082 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:42:50,972 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:42:54,493 127.0.0.1 - - [23/Jan/2022 18:42:54] "POST /cassendra/add HTTP/1.1" 200 -
2022-01-23 18:43:23,143 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:43:24,649 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:43:26,162 Closing connection <AsyncoreConnection(2248979905864) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:43:26,163 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:43:28,801 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:43:33,758 127.0.0.1 - - [23/Jan/2022 18:43:33] "POST /cassendra/add HTTP/1.1" 200 -
2022-01-23 18:53:00,735 127.0.0.1 - - [23/Jan/2022 18:53:00] "POST /cassendraupdate HTTP/1.1" 404 -
2022-01-23 18:53:34,784  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:53:37,186 127.0.0.1 - - [23/Jan/2022 18:53:37] "POST /cassendraupdate HTTP/1.1" 404 -
2022-01-23 18:53:58,333 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:53:59,654 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:54:01,165 Closing connection <AsyncoreConnection(2252325698376) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:54:01,168 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:54:03,828 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:54:06,771 <Error from server: code=2000 [Syntax error in CQL query] message="line 1:36 no viable alternative at input 'WHERE' (...test.student SET city = [pune] WHERE...)">
2022-01-23 18:54:06,772 127.0.0.1 - - [23/Jan/2022 18:54:06] "POST /cassendra/update HTTP/1.1" 200 -
2022-01-23 18:58:08,607  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:58:20,532 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:58:21,843 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:58:23,357 Closing connection <AsyncoreConnection(1398166622024) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:58:23,358 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:58:26,304 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:58:29,654 <Error from server: code=2000 [Syntax error in CQL query] message="line 1:36 no viable alternative at input 'WHERE' (...test.student SET city = [pune] WHERE...)">
2022-01-23 18:58:29,658 127.0.0.1 - - [23/Jan/2022 18:58:29] "POST /cassendra/update HTTP/1.1" 200 -
2022-01-23 18:59:34,929  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 18:59:38,856 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:59:40,140 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:59:41,664 Closing connection <AsyncoreConnection(2634433806984) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 18:59:41,665 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 18:59:44,449 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 18:59:48,130 127.0.0.1 - - [23/Jan/2022 18:59:48] "POST /cassendra/update HTTP/1.1" 200 -
2022-01-23 19:00:57,345 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:00:58,832 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:01:00,342 Closing connection <AsyncoreConnection(2634434448776) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 19:01:00,344 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:01:03,247 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 19:01:08,087 127.0.0.1 - - [23/Jan/2022 19:01:08] "POST /cassendra/add HTTP/1.1" 200 -
2022-01-23 19:03:41,394  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 19:04:31,469 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:04:32,784 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:04:34,290 Closing connection <AsyncoreConnection(2219178583560) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 19:04:34,290 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:04:37,185 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:b4c37cb0-4dec-409c-a4bf-f890bd91a59e'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 19:04:40,757 <Error from server: code=2000 [Syntax error in CQL query] message="line 1:21 mismatched input 'WHERE' expecting K_FROM (delete test.student  [WHERE]...)">
2022-01-23 19:04:40,760 127.0.0.1 - - [23/Jan/2022 19:04:40] "POST /cassendra/delete HTTP/1.1" 200 -
2022-01-23 19:05:23,865  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 19:05:28,284 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:05:29,578 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:05:31,101 Closing connection <AsyncoreConnection(3062542924808) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 19:05:31,102 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:05:33,756 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 19:05:36,068 127.0.0.1 - - [23/Jan/2022 19:05:36] "POST /cassendra/delete HTTP/1.1" 200 -
2022-01-23 19:10:34,738  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 19:11:09,416 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:11:10,729 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:11:12,258 Closing connection <AsyncoreConnection(1371434243528) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 19:11:12,259 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:11:15,143 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 19:11:18,617 127.0.0.1 - - [23/Jan/2022 19:11:18] "POST /cassendra/view HTTP/1.1" 200 -
2022-01-23 19:11:46,150  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 19:11:50,143 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:11:51,451 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:11:52,968 Closing connection <AsyncoreConnection(2576428877064) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 19:11:52,969 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:11:55,667 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:c1e98899-57a4-400e-ab5d-9e6987ae62bd'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 19:11:59,279 Exception on /cassendra/view [POST]
Traceback (most recent call last):
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "E:/Data Science/DS/03-Framework/Assignements/APIFlask/main.py", line 388, in cassendraview
    return jsonify(csview.cassendraview(DATABASE, TABLE))
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 355, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 133, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\site-packages\flask\json\__init__.py", line 57, in default
    return super().default(o)
  File "C:\Users\Delll\anaconda3\envs\APIFlask\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResultSet is not JSON serializable
2022-01-23 19:11:59,344 127.0.0.1 - - [23/Jan/2022 19:11:59] "POST /cassendra/view HTTP/1.1" 500 -
2022-01-23 19:12:40,469  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2022-01-23 19:12:48,590 Downgrading core protocol version from 66 to 65 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:12:49,904 Downgrading core protocol version from 65 to 5 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:12:51,412 Closing connection <AsyncoreConnection(2578882155976) 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250> due to protocol error: Error from server: code=000a [Protocol error] message="Beta version of the protocol used (5/v5-beta), but USE_BETA flag is unset"
2022-01-23 19:12:51,412 Downgrading core protocol version from 5 to 4 for 7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
2022-01-23 19:12:54,315 Using datacenter 'us-east1' for DCAwareRoundRobinPolicy (via host '7037b01c-fc4a-4437-a77e-3592d9583ae5-us-east1.db.astra.datastax.com:29042:5042867d-362a-4256-a12a-54016d09b250'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
2022-01-23 19:12:59,221 127.0.0.1 - - [23/Jan/2022 19:12:59] "POST /cassendra/view HTTP/1.1" 200 -
